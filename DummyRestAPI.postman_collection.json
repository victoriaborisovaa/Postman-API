{
	"info": {
		"_postman_id": "8b0b38bb-5063-4adb-beca-2f551f04d4dd",
		"name": "DummyRestAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"//first test\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//second test\r",
							"pm.test(\"Test to fail\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							"//third test\r",
							"pm.test(\"Content test\", function () {\r",
							"    var jData = jsonData.data;\r",
							"    pm.expect(jData).to.be.an('array');\r",
							"    pm.expect(jsonData.status).to.eql('succes');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{baseurl}}/api/v1/employees",
					"protocol": "https",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "employeeid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Session cookie is present\", function () {\r",
							"    pm.expect(pm.cookies.has('session_id')).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Session cookie value is correct\", function () {\r",
							"    pm.expect(pm.cookies.get('session_id')).to.eql('expected_value');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{baseurl}}/api/v1/employee/{{employeeid}}",
					"protocol": "https",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						"{{employeeid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Viktoria\",\r\n    \"salary\":\"3456,23\",\r\n    \"age\":23,\r\n    \"certificates\": [\"english\", \"french\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{baseurl}}/api/v1/create",
					"protocol": "https",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": [
				{
					"name": "create",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Viktoria\",\r\n    \"salary\":\"3456,23\",\r\n    \"age\":23,\r\n    \"certificates\": [\"english\", \"french\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseurl}}/api/v1/create",
							"protocol": "https",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 24 May 2024 07:20:26 GMT"
						},
						{
							"key": "Server",
							"value": "Apache"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, private"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=86400"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "60"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "58"
						},
						{
							"key": "Upgrade",
							"value": "h2,h2c"
						},
						{
							"key": "Connection",
							"value": "Upgrade"
						},
						{
							"key": "Expires",
							"value": "Sat, 25 May 2024 07:20:26 GMT"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "X-Endurance-Cache-Level",
							"value": "2"
						},
						{
							"key": "X-nginx-cache",
							"value": "WordPress"
						},
						{
							"key": "Content-Length",
							"value": "155"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"name\": \"Viktoria\",\n        \"salary\": \"3456,23\",\n        \"age\": 23,\n        \"certificates\": [\n            \"english\",\n            \"french\"\n        ],\n        \"id\": 8865\n    },\n    \"message\": \"Successfully! Record has been added.\"\n}"
				}
			]
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Viktoria\",\r\n    \"salary\":\"7890,99\",\r\n    \"age\":23\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https:/{{baseurl}}/api/v1/update/{{employeeid}}",
					"host": [
						"https"
					],
					"port": "",
					"path": [
						"{{baseurl}}",
						"api",
						"v1",
						"update",
						"{{employeeid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.status === 204) {\r",
							"    pm.test(\"Resource successfully deleted\", function () {\r",
							"        pm.expect(pm.response.status).to.eql(204);\r",
							"    });\r",
							"} else {\r",
							"    pm.test(\"Delete operation failed\", function () {\r",
							"        pm.expect(pm.response.status).to.be.oneOf([400, 404]);\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https:/{{baseurl}}/api/v1/delete/1234",
					"host": [
						"https"
					],
					"port": "",
					"path": [
						"{{baseurl}}",
						"api",
						"v1",
						"delete",
						"1234"
					]
				}
			},
			"response": []
		}
	]
}